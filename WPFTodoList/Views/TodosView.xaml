<UserControl x:Class="WPFTodoList.Views.TodosView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             mc:Ignorable="d" 
             d:DesignHeight="450"
             d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>
    
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Border BorderThickness="0, 0, 0, 1" BorderBrush="#FFCCCCCC">
            <DockPanel LastChildFill="False" Margin="2">
                <!--<Button DockPanel.Dock="Right"
                        Background="Transparent"
                        BorderThickness="0"
                        Width="25"
                        Height="25"
                        Cursor="Hand"
                        Command="{ Binding Path=RestoreCommand }">
                    <Button.Content>
                        <fa:ImageAwesome Icon="RotateLeft"
                                         Width="15"
                                         Foreground="DodgerBlue" />
                    </Button.Content>
                </Button>-->
                <Button DockPanel.Dock="Right"
                        BorderThickness="0"
                        Width="25"
                        Height="25"
                        Cursor="Hand"
                        Command="{ Binding Path=OpenAddTodoDialogCommand }">
                    <Button.Content>
                        <fa:ImageAwesome Icon="Plus" Width="15" Foreground="{ StaticResource LightBlueLighten5 }" />
                    </Button.Content>
                </Button>
            </DockPanel>
        </Border>

        <TextBox Grid.Row="1" x:Name="FilterTextBox" Text="{ Binding Path=SearchString, UpdateSourceTrigger=PropertyChanged }">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="KeyUp">
                    <i:InvokeCommandAction Command="{ Binding FilterCommand }" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>

        <Label Grid.Row="1"
               Padding="11, 8"
               Margin="2"
               Foreground="LightGray"
               VerticalContentAlignment="Center"
               Content="Enter search string..."
               IsHitTestVisible="False">
            <Label.Style>
                <Style TargetType="{ x:Type Label }">
                    <Style.Setters>
                        <Setter Property="Visibility" Value="Collapsed" />
                    </Style.Setters>
                    <Style.Triggers>
                        <DataTrigger Binding="{ Binding Path=Text, ElementName=FilterTextBox }" Value="">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <!--<DataTrigger Binding="{ Binding ElementName=FilterTextBox, Path=IsFocused }" Value="True">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                        <DataTrigger Binding="{ Binding ElementName=FilterTextBox, Path=IsFocused }" Value="False">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>-->
                    </Style.Triggers>
                </Style>
            </Label.Style>
        </Label>

        <ListView Grid.Row="2" 
                  Background="Transparent"
                  AlternationCount="2"
                  SelectionMode="Single"
                  ItemContainerStyle="{ StaticResource TodosListViewItemContainerStyle }"
                  ItemTemplate="{ StaticResource TodosListViewDataTemplate }"
                  ItemsSource="{ Binding Path=ViewSource }"
                  SelectedItem="{ Binding Path=SelectedTodoItem }"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListView.GroupStyle>
                <GroupStyle ContainerStyle="{ StaticResource TodosListViewContainerStyle }" />
            </ListView.GroupStyle>
        </ListView>
    </Grid>
</UserControl>
